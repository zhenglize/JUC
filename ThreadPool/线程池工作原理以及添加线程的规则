
         线程池的工作原理

1.在创建了线程池后，等待提交过来的任务请求。
2.当调用execute()方法添加一个请求任务时，线程池会做如下判断:
   2.1如果正在运行的线程数量小于corePoolSize,那么马上创建线程运行这个任务;
   2.2如果正在运行的线程数量大于或等于corePoolSize,那么将这个任务放入队列;
   2.3如果这时候队列满了且正在运行的线程数量还小于maximumPoolSize,那么还是要创建非核心线程立刻运行这个任务;
   2.4如果队列满了且正在运行的线程数量大于或等于maximumPoolSize,那么线程池会启动饱和拒绝策略来执行。
3.当一个线程完成任务时，它会从队列中取下一个任务来执行。
4.当一个线程无事可做超过一定的时间(keepAliveTime) 时，线程池会销毁。

         增加线程的特点

1.通过设置corePoolSize和maximumPoolSize相同, 就可以创建固定大小的线程池。
2.通过设置maximumPoolSize为很高的值,例如Integer.MAX_VALUE ,可以允许线程池容纳任意数量的并发任务。
3.是只有在队列填满时才 创建多于corePoolSize的线程,所以如果你使用的是无界队列(例如LinkedBlockingQueue ) ,
那么线程数就不会超过corePoolSize。