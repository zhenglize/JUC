                                final的作用

◆类防止被继承、方法防止被重写、变量防止被修改
◆天生是线程安全的,而不需要额外的同步开销

final修饰变量
◆含义:被final修饰的变量（八种基础数据类型）,意味着值不能被修改。如果变量是对象,那么对象的引用不能变,
  但是对象自身的内容依然可以变化。

final修饰变量:赋值时机
◆属性被声明为final后,该变量则只能被赋值一次。且一旦被赋值, final的变量就不能再被改变,无论如何也不会变。

final修饰全局变量赋值时机
◆第一种是在声明变量的等号右边直接赋值
◆第二种就是构造函数中赋值
◆第三就是在类的初始代码块中赋值(不常用)
◆如果不采用第一种赋值方法,那么就必须在第2、3种挑一个来赋值,而不能不赋值,这是final语法所规定的

final修饰静态变量赋值时机
◆两个赋值时机:除了在声明变量的等号右边直接赋值外,static final变量还可以用static初始代码块赋值,
  但是不能用普通的初始代码块赋值

final修饰局部变量的赋值时机
◆和前面两种不同，由于这里的变量是在方法里的,所以没有构造函数,也不存在初始代码块
◆final修饰的局部变量不规定赋值时机,只要求在使用前必须赋值,这和方法中的非final变量的要求也是一样的

为什么final要规定赋值时机?
◆如果初始化不赋值，后续赋值,就是从null变成你的赋值,这就违反final不变的原则了!

final修饰方法
◆构造方法不允许final修饰
◆不可被重写,也就是不能被override ,即便是子类有同样名字的方法,那也不是override ,这个和static方法是一个道理。
  （被final修饰的方法，子类中不能有与父类同名的方法。子类中可以直接调用父类中的final方法）
◆引申: static方法不能被重写
   被static修饰的方法，子类不能重写，但可以有与他同名的方法。因为static是属于那个类的。

final修饰类
◆不可被继承
◆例如典型的String类就是final的,我们从没见过哪个类是继承String类的